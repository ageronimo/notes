(1)

TABLE OF CONTENTS:
1-Genral interface info
2-Git Shell commands
3-Basic knowledge (not coding)
4-Git commands
5-HTML (Hyper Text Markup Language)
6-CSS (Cascade Style Sheets)
7-Verizon App Challenge

CLI - command line interface
^means of interacting with a computer in the form of successive line of text

GUI - graphic user interface
^means of interacting with a computer using visual icons

programming language: language designed to give instructions to a machine

Websites:
-pleasure and action between user and product
-organization, etc
-better to open from local server than folder, less buggy

Design:
UI: user interface | color, visually pleasing/aesthetic
UX: user experience | organization, layout, etc

add update delete (status symbols in git respectively)
+ ~ - 


-HELPFUL LINKS-
  https://css-tricks.com/how-css-selectors-work/
  https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_started/Selectors
  https://css-tricks.com/all-about-floats
  kellishouts.github.io/css-properties/
  https://fonts.google.com/
  http://www.myhtmltutorials.com/line.html
  https:// www.w3schools.com
  www.text2mind.com
  gomagames.com/blocks/blocks_sassy.html


/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
(2)

CLI Commands (Git Shell aka Power Shell):
cd | change directory
cd / | root
cd .. | move up
mkdir <folder> | create folder
touch <filename> | creates file
ls | list files/folders in current folder
mkdir <file>/<file2> | creates file from current location
function()

/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
(3)

*do not copy and paste

3 Levels of Knowing:
-understanding
-teaching
-grocking and intuition

Tools:
- Github
- Git Shell
- Sublime Text

Traits of a developer:
-team player
-problem solver
-good communicator

/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
(4)

Git Commands:
git init | initialize project
git status | checks status of project
"clean" | no red in status
git add <filename> |
git commit -m 'this is my first commit for notes' | commits, adds to queue
git push | takes everything from queue and uploads (remote)
//upload process: add>commit>push

Uploading Process Sequence
text.txt vvv (working dir)
staging vvv (git add)
local git vvv (git commit)
Github (git push)

/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
(5)

HTML : mark up language

<tags> | everything inside is structure, desc of code
index.html | referred to as toc for site

parts:
-head
-body
-header
-footer

<!DOCTYPE html> | always wanted on every page | doctype defines doc type
</html> | tells browser you're writing in html
 <meta charset="utf-8"> |sets secondary standards for character sets
<html lang="en"> | defines root of html doc
  <head></head> | defines info about doc
  <body></body> | defines doc body

<p> | paragraph element
</p> | closing tag
<br/> | self closing tag

-tags inside body are seen on website
-head,body,html always have closing tags

<header></header> | navigation, logos
<footer></footer> | copyright, etc
<div></div> | block element, stacks instead of side to side
<span></span> | inline elements

-words can be wrapped in tags

Attributes:
<img src="http://something.com/myimage.jpg"/>

<h1></h1> >> <h6></h6> | biggest to smallest text size
<b></b> | bold
<!--comment--> | (self explanatory)
<div id=""> | only use once, can be used for linking elements
<div class="" | can be used multiple times, use space to use more than one class, uses .
<a href=""></a> | hyperlink reference, uses #

Websites (poor structure):
http://www.exmouth-view.co.uk/
www.themostamazingwebsiteontheinternet.com

Notes:
-same text size, color, etc is bad
-organization
-order matters to some extent (header, footer, content, etc)
-IDs are unique, only use once
-html more structure
-^css more visual

2 types of lists:
<ul> </ul> | unordered lists : bullet points, arrows, etc
  <li> </li> | list child
<ol> </ol> | ordered lists
-lists can be put in lists
-place divs
-may include #s and roman numerals
<nav> </nav>

Div:
<div aside>
<h3> title

Blog Entries:
*make sure to close tags

<div>
  <class="content">
  <h2>title
  <h6>date
  <div class="article">
    <h3>
    <p>
   <div class="article">
    <h3>
    <p>
</div>
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
(6) CSS

CSS | Cascading style sheets

3 ways to add: 
 1.) In line styles (style="" att)
 2.) Internal using <style></style> element (within head)
 3.) External stylesheet linked within <head></head>

CSS declarations
 property:value;
 close with {}


  
Colors
rgba | color transparency/opacity
3 ways to add color values:
  - valid color name
      ex: h1 { color: red; }
  - rgb value, aka rgba (a for transparency/opacity)
      ex: #container {background-color: rgb(255,255,0;)}
  - hex value
      ex: .main_title { border 1pc #ff0000 solid; }

Attributes that identify elements for CSS:
id (#) selector | use only once per html file, for unique elements
  ex:
    element: <h1 id="main_title">Hello</h1>
    css selector: #main_title { color: blue; }
class (.) selector | use for multiple/repeating elements, may contain more than one class
  ex:
    element: <h2 class="center second_title">World

Grouping Selectors
-to group selectors w/ same style, use comma
  ex: 
    h1, h2, p { color: red; }

Font

Margins
  2 values:top bottom
  4 values: top left bottom right

  ex:
    50px 100px 
     long-handed:
      margin-top:50px
      margin-bottom:50px
      margin-left:100px
      margin-right:100px

Borders
  - not as specific as margins
  -3 main values: size-solid/etc-color


  *there's a border radius generator

Padding
  having only 1 value applies to all 4 sides
  2 is top/bott and left/right

Box Flow
  margin
    border
      padding
        content

Float
-similar to word wrapping


Light Blue Pastel Color Palette:
  .color-primary-0 { color: #619EF3 } /* Main Primary color */
  .color-primary-1 { color: #F3F8FE }
  .color-primary-2 { color: #9DC2F6 }
  .color-primary-3 { color: #2A7FF2 }
  .color-primary-4 { color: #0367F0 }

    Link
    http://paletton.com/#uid=13E0G0kl1Wx1x+IcEXDsUWkWEVB

Light Purple/Blue/Green Palette:
  Link
  http://paletton.com/palette.php?uid=53V0G0k7UUa

*get around to learning box-sizing

:after | applies css after element


~Following Along in Class~
.hero {
  border: 1px solid #000;
  height:
  background-image: url('../assets/hero.png');
  background-repeat: no-repeat;
  bakground-position: top right;
}

//May Paste Back Later\\
      <li>
        <a href="#home">Home</a>
      </li>
      <li>
        <a href="#about">About</a>
      </li>
      <li>
        <a href="#pricing">Pricing</a>
      </li>
      <li>
        <a href="#howitwork">How It Works</a>
      </li>

/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
(7) Verizon App Challenge

Brainstorm:
Club Communication | self explanatory, like a Remind for clubs
List | makes lists of any kind and can setup reminders
Calming | plays music or videos to help people calm down/ relax
Art Idea | generate topic or pic of inspiration

Pitching: delivering business plan verbally
  ex: entrepeneur pitches to investors
2 parts: elevator, high concept and traction
high concept: desc app in one sentence
  -use familiar terms
  -what and who
traction: proof,data
mvp: minimal viable product | gets u data, testable, reduce wasting time, validates app
high concept+traction=elevator pitch

/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
(8) Random answers (CSS and HTML)
Responsive Design | building a site to respond to multiple sizes also known as fluid design
  ex. Google, Facebook, 

Grid Based Design | web design with grid content
  ex. Pinterest, tumblr

media queries | tell design to change/ adapt AKA break points in css that tell your app to change accoridng to screen size
  ex. <style>
        @media(max-width:600px){
          .facet-sidebar{
          display:none;
          }
        }

em (in css) | unit of measure in CSS that adjusts to parent, usually used for font size, adjusts size to parent. em for responsive 
design while px is for static pages

pseudo class selectors | used to define a special state

mobile design | web design for mobile devices, only effective with media queries, effective if simple to use

specificity | the most specific rule gets higher priority

<<<JUST IN CASE>>>
/*style mobile first, use meta viewport*/

.container {
  background-color: salmon;
  width: 100%;
  height: 100%;
  margin: 0 0 0 0;
  padding: 5px 30px;
}

h1 {
  text-align: center;
}


.block {
  width: 100%;
  margin: 20px 5px 20px 5px;
  padding: 30px 0;
  text-align: center;
  text-transform: uppercase;
  background-color: black;
  color: white;
}


/*medium screen 800px-1000px*/
@media screen and (min-width:800px){
  .container {
    background-color:  #619EF3;

  }
}

/*large screen min-width 1000px*/
@media screen and(min-width: 1000px){
  .container {
    background-color: #619EF3;
  }
}


@media screen and(min-width:900px){
  .container {
    background-color: orange;
  }
}

/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
(8) More Git Stuff

repo>master
    >solutions(ex branch name)

branch copies master, can be worked on

pull from master before pushing branch

master is kind of like production,
  branches are like prototypes/development

can allow you to experiment/not mess up original
